<Module xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="../FrankConfig.xsd">
    <Adapter name="Fetch_ZGW_To_ZDS_Creeerzaak"
        active="${Fetch_ZGW_To_ZDS_Creeerzaak.Active}"
        description="">

        <Receiver
            name="Fetch_ZGW_To_ZDS_Creeerzaak"
            transactionAttribute="Required"
            pollInterval="5"
            maxRetries="0"
        >
            <MessageStoreListener
                name="Fetch_ZGW_To_ZDS_Creeerzaak"
                slotId="${instance.name}/Fetch_ZGW_To_ZDS_Creeerzaak"
                peekUntransacted="true"
                statusValueInProcess="I"
            />
        </Receiver>

        <Pipeline>
            <Exits>
                <Exit name="EXIT" state="SUCCESS" />
                <Exit name="EXCEPTION" state="ERROR" />
            </Exits>

            <SenderPipe name="GetAuthorizationHeaderForZakenApi"
                getInputFromFixedValue="&lt;dummy/&gt;">
                <IbisLocalSender
                    name="GetAuthorizationHeaderForZakenApiSender"
                    javaListener="GenerateAuthorizationHeaderForZakenApi"
                    returnedSessionKeys="Error,Authorization">
                </IbisLocalSender>
                <Forward name="success" path="Call Open Zaak to get the zaak" />
                <Forward name="exception" path="EXCEPTION" />
            </SenderPipe>

            <IfPipe name="checkResource" xpathExpression="boolean(/root/actie= 'create') and boolean(/root/resource = 'zaak')">
                <Forward name="then" path="Call Open Zaak to get the zaak" />
                <Forward name="else" path="checkResource2" />
            </IfPipe>

            <IfPipe name="checkResource2" xpathExpression="boolean(/root/kanaal = 'documenten') and boolean(/root/resource = 'enkelvoudiginformatieobject')'">
                <Forward name="then" path="Call Open Zaak to get the zaak" />
                <Forward name="else" path="EXIT" />
            </IfPipe>

            <!-- retrieve the case -->
            <SenderPipe name="Call Open Zaak to get the zaak"
                getInputFromSessionKey="originalMessage">
                <HttpSender
                    name="getZaak"
                    headersParams="Accept-Crs,Authorization">
                    <Param name="Authorization" sessionKey="Authorization" />
                    <Param name="url" xpathExpression="/root/hoofdObject" />
                    <Param name="Accept-Crs" value="EPSG:4326" />
                </HttpSender>
            </SenderPipe>

            <JsonPipe name="getZaakJsonToXml" storeResultInSessionKey="getZaakXml" />

            <!-- retrieve casetype -->
            <SenderPipe name="Call Open Zaak to get the zaakType">
                <HttpSender name="zaakTypeResponse"
                    headersParams="Accept-Crs,Authorization">
                    <Param name="Authorization" sessionKey="Authorization" />
                    <Param name="url" xpathExpression="/root/zaaktype" />
                    <Param name="Accept-Crs" value="EPSG:4326" />
                </HttpSender>
            </SenderPipe>

            <JsonPipe name="zaakTypeResponseJsonToXml"
                storeResultInSessionKey="storeZaakTypeResponse" />

            <XsltPipe name="Check resultaat in zaak" getInputFromSessionKey="getZaakXml"
                styleSheetName="xsl/checkResultaat.xsl">
                <Forward name="success" path="Check if resultaat exists" />
            </XsltPipe>

            <IfPipe name="Check if resultaat exists"
                xpathExpression="string-length(resultaat) &gt; 0">
                <Forward name="then" path="Call Open Zaak to get resultaat in zaak" />
                <Forward name="else" path="Call Open Zaak to get status in zaak" />
            </IfPipe>

            <SenderPipe name="Call Open Zaak to get resultaat in zaak"
                getInputFromSessionKey="getZaakXml">
                <HttpSender name="resultaat"
                    headersParams="Accept-Crs,Authorization">
                    <Param name="Authorization" sessionKey="Authorization" />
                    <Param name="url" xpathExpression="/root/resultaat" />
                    <Param name="Accept-Crs" value="EPSG:4326" />
                </HttpSender>
            </SenderPipe>
            <JsonPipe name="resultaatJsonToXml" storeResultInSessionKey="storeResultaat" />

            <!-- retrieve the status -->
            <SenderPipe name="Call Open Zaak to get status in zaak"
                getInputFromSessionKey="getZaakXml">
                <HttpSender name="statusResponse"
                    headersParams="Accept-Crs,Authorization">
                    <Param name="Authorization" sessionKey="Authorization" />
                    <Param name="url" xpathExpression="/root/status" />
                    <Param name="Accept-Crs" value="EPSG:4326" />
                </HttpSender>
            </SenderPipe>

            <JsonPipe name="statusResponseJsonToXml" storeResultInSessionKey="storeStatusResponse" />

            <SenderPipe name="Call Open Zaak to get rollen" getInputFromSessionKey="getZaakXml">
                <HttpSender
                    name="rollenJson"
                    methodType="GET"
                    headersParams="Authorization,Accept-Crs"
                    timeout="${openzaak2zds.zgw.zaken-api.timeout}"
                >
                    <Param name="url" value="${openzaak2zds.zgw.zaken-api.root-url}rollen" />
                    <Param name="Authorization" sessionKey="Authorization" />
                    <Param name="Accept-Crs" value="EPSG:4326" />
                    <Param name="zaak" xpathExpression="root/url" />
                </HttpSender>
            </SenderPipe>

            <JsonPipe name="rollenJsonresultJsonToXml" storeResultInSessionKey="storeRollenJson"/>

            <XsltPipe name="check Rollen count" styleSheetName="xsl/checkRollen.xsl">
                <Forward name="success" path="check if rollen count!=1" />
            </XsltPipe>

            <IfPipe name="check if rollen count!=1" xpathExpression="string-length(count) &gt; 0">
                <Forward name="then" path="check Inpbsn" />
                <Forward name="else" path="storeRejectionRollen" />
            </IfPipe>


            <XsltPipe name="check Inpbsn" getInputFromSessionKey="storeRollenJson"
                styleSheetName="xsl/checkInpbsn.xsl">
                <Forward name="success" path="check if Inpbsn is None" />
            </XsltPipe>

            <IfPipe name="check if Inpbsn is None" xpathExpression="string-length(inpBsn) &gt; 0">
                <Forward name="then" path="Create result file" />
                <Forward name="else" path="storeRejectionInpbsn" />
            </IfPipe>

            <PutInSessionPipe name="storeRejectionInpbsn" sessionKey="rejectionReason"
                value="BSN incorrect" />

            <PutInSessionPipe name="storeRejectionRollen" sessionKey="rejectionReason"
                value="Rollen incorrect" />

            <XsltPipe name="Create result file" getInputFromSessionKey="getZaakXml"
                omitXmlDeclaration="true"
                styleSheetName="xsl/result.xsl">
                <Param name="storeResultaat" sessionKey="storeResultaat" type="DOMDOC" defaultValue="&lt;Empty/&gt;" />
                <Param name="storeRollenJson" sessionKey="storeRollenJson" type="DOMDOC" />
                <Param name="storeZaakTypeResponse" sessionKey="storeZaakTypeResponse" type="DOMDOC" />
                <Param name="storeStatusResponse" sessionKey="storeStatusResponse" type="DOMDOC" />
                <Param name="uuid" pattern="{uuid}" />
                <Param name="zkt_code" sessionKey="zkt_code" defaultValue="${zkt_code}" />
            </XsltPipe>

            <SoapWrapperPipe name="wrapTheMessage">
                <Forward name="success" path="SendZaakDetailsToEndpointSender" />
                <Forward name="exception" path="EXCEPTION" />
            </SoapWrapperPipe>

            <!--send
            to an endpoint as 'creerzaak' xml-->
            <SenderPipe name="SendZaakDetailsToEndpointSender">
                <HttpSender
                    name="SendZaakDetailsToEndpoint"
                    methodType="POST"
                    headersParams="Authorization,Accept-Crs,suiteapikey,SOAPaction,Content-Type"
                    timeout="${openzaak2zds.zgw.zaken-api.timeout}"
                />
                <Param name="url" value="${endpointForCreeerZaak}" />
                <Param name="suiteapikey" pattern="{password}" authAlias="${suiteapikey}"
                    hidden="true" />
                <Param name="Accept-Crs" value="EPSG:4326" />
                <Param name="Content-Type" value="text/xml" />
                <Param name="SOAPaction" value="${SOAPaction}" />
                <Param name="Authorization" sessionKey="Authorization" />
                <Forward name="success" path="EXIT" />
                <Forward name="exception" path="EXCEPTION" />
            </SenderPipe>

        </Pipeline>
    </Adapter>
</Module>