<Module
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="../FrankConfig.xsd"
>
    <Adapter
        name="Notificaties_Create"
        active="${Notificaties_Create.active}"
    >
        <Receiver name="Notificaties_Create">
            <ApiListener
                name="Notificaties_Create"
                method="POST"
                uriPattern="/notificaties/api/v1/notificaties"
                headerParams="API-version,Authorization"
                produces="JSON"
                consumes="JSON"
            />
        </Receiver>
        <Pipeline>
            <Exits>
                <Exit name="Created" state="SUCCESS" code="201" />
                <Exit name="Accepted" state="SUCCESS" code="202" />
                <Exit name="Unauthorized" state="ERROR" code="401" />
                <Exit name="Forbidden" state="ERROR" code="403" />
                <Exit name="InternalServerError" state="ERROR" code="500" />
            </Exits>

            <!--  Notificaties API has 401 and 403 the wrong way around. It expects 403 if there is
            no authorization present.-->
            <IfPipe
                name="CheckForbidden"
                getInputFromSessionKey="headers"
                preserveInput="true"
                xpathExpression="string-length(/headers/header[@name = 'Authorization']/text()) = 0"
            >
                <Forward name="then" path="Forbidden" />
                <Forward name="else" path="CheckAuthorized" />
            </IfPipe>

            <IfPipe
                name="CheckAuthorized"
                getInputFromSessionKey="headers"
                preserveInput="true"
                xpathExpression="/headers/header[@name = 'Authorization']/text() != $Authorization"
            >
                <Param name="Authorization" pattern="{password}"
                    authAlias="${openzaak2zds.connections.notificaties-subscription-api.auth-alias}"
                    hidden="true" />
                <Forward name="then" path="Unauthorized" />
                <Forward name="else" path="JsonToXml" />
            </IfPipe>

            <JsonPipe
                name="JsonToXml"
            >
                <Forward name="success" path="HandleTestChannelMessage" />
            </JsonPipe>

            <IfPipe
                name="HandleTestChannelMessage"
                preserveInput="true"
                xpathExpression="//kanaal = 'test'"
            >
                <Forward name="then" path="Created" />
                <Forward name="else" path="checkResource" />
            </IfPipe>

            <IfPipe name="checkResource" xpathExpression="boolean(/root/actie= 'create') and boolean(/root/resource = 'zaak')">
                <Forward name="then" path="ZaakCreateSender" />
                <Forward name="else" path="checkResource2" />
            </IfPipe>

            <IfPipe name="checkResource2" xpathExpression="boolean(/root/kanaal = 'documenten') and boolean(/root/resource = 'enkelvoudiginformatieobject')">
                <Forward name="then" path="ZaakCreateSender" />
                <Forward name="else" path="Accepted" />
            </IfPipe>

            <!-- <SenderPipe
                name="GetAuthorizationHeaderForObjectsApi"
                getInputFromFixedValue="&lt;dummy/&gt;"
                preserveInput="true"
            >
                <IbisLocalSender
                    name="GetAuthorizationHeaderForObjectsApiSender"
                    javaListener="GenerateAuthorizationHeaderForObjectsApi"
                    returnedSessionKeys="Error,Authorization"
                >
                </IbisLocalSender>
                <Forward name="success" path="ResourceRequestSender" />
                <Forward name="exception" path="InternalServerError" />
            </SenderPipe>

            <SenderPipe
                name="ResourceRequestSender"
            >
                <HttpSender
                    name="ResourceRequestSenderHttpSender"
                    headersParams="Accept-Crs,Authorization"
                >
                    <Param name="Authorization" sessionKey="Authorization" />
                    <Param name="url" xpathExpression="//resourceUrl" />
                    <Param name="Accept-Crs" value="EPSG:4326" />
                </HttpSender>
                <Forward name="success" path="ZaakCreateSender" />
                <Forward name="exception" path="InternalServerError" />
            </SenderPipe> -->

            <SenderPipe
                name="ZaakCreateSender"
            >
                <IbisLocalSender
                    name="ZaakCreateSenderLocalSender"
                    javaListener="Zaak_Create"
                >
                </IbisLocalSender>
                <Forward name="success" path="Created" />
                <Forward name="exception" path="InternalServerError" />
            </SenderPipe>
        </Pipeline>
    </Adapter>
</Module>